import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { useNavigate } from 'react-router-dom'
import {
    FileText,
    FileSpreadsheet,
    Presentation,
    File,
    Music,
    Image,
    Folder,
    Search,
    Download,
    Eye,
    Trash2,
    ArrowRight
} from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'

const Files = () => {
    const [searchQuery, setSearchQuery] = useState('')
    const navigate = useNavigate()

    // Mock data for chat-related files
    const fileSections = [
        {
            title: 'Documents',
            icon: FileText,
            description: 'Documents uploaded or generated in conversations',
            files: [
                { name: 'Project_Report.docx', size: '2.4 MB', date: '2024-01-15', type: 'Word Document', chat: 'Research Discussion #1', user: 'Uploaded by user' },
                { name: 'Financial_Data.xlsx', size: '1.8 MB', date: '2024-01-14', type: 'Excel Spreadsheet', chat: 'Budget Analysis', user: 'Generated by AI' },
                { name: 'Presentation.pptx', size: '5.2 MB', date: '2024-01-13', type: 'PowerPoint', chat: 'Team Meeting', user: 'Uploaded by user' },
                { name: 'Notes.txt', size: '45 KB', date: '2024-01-12', type: 'Text File', chat: 'Quick Notes', user: 'Generated by AI' },
                { name: 'Contract.pdf', size: '892 KB', date: '2024-01-11', type: 'PDF Document', chat: 'Legal Review', user: 'Uploaded by user' }
            ]
        },
        {
            title: 'Audio Files',
            icon: Music,
            description: 'Audio recordings from chat sessions',
            files: [
                { name: 'Meeting_Recording.mp3', size: '24.5 MB', date: '2024-01-15', type: 'MP3 Audio', chat: 'Voice Discussion', user: 'Recorded in chat' },
                { name: 'Interview.wav', size: '156 MB', date: '2024-01-14', type: 'WAV Audio', chat: 'Technical Interview', user: 'Generated by AI' },
                { name: 'Podcast_Episode.mp3', size: '18.3 MB', date: '2024-01-13', type: 'MP3 Audio', chat: 'Audio Summary', user: 'Generated by AI' }
            ]
        },
        {
            title: 'Images',
            icon: Image,
            description: 'Images shared or generated in conversations',
            files: [
                { name: 'Screenshot_001.png', size: '1.2 MB', date: '2024-01-15', type: 'PNG Image', chat: 'Bug Report', user: 'Uploaded by user' },
                { name: 'Product_Photo.jpg', size: '3.8 MB', date: '2024-01-14', type: 'JPEG Image', chat: 'Product Demo', user: 'Generated by AI' },
                { name: 'Logo_Design.webp', size: '245 KB', date: '2024-01-13', type: 'WebP Image', chat: 'Design Review', user: 'Uploaded by user' },
                { name: 'Diagram.svg', size: '89 KB', date: '2024-01-12', type: 'SVG Image', chat: 'System Architecture', user: 'Generated by AI' },
                { name: 'Banner.gif', size: '567 KB', date: '2024-01-11', type: 'GIF Image', chat: 'Animation Demo', user: 'Generated by AI' }
            ]
        }
    ]

    const getFileIcon = (fileName) => {
        const ext = fileName.split('.').pop()?.toLowerCase()
        switch (ext) {
            case 'docx':
                return <FileText className="w-5 h-5 text-blue-400" />
            case 'xlsx':
                return <FileSpreadsheet className="w-5 h-5 text-green-400" />
            case 'pptx':
                return <Presentation className="w-5 h-5 text-orange-400" />
            case 'pdf':
                return <File className="w-5 h-5 text-red-400" />
            case 'txt':
                return <FileText className="w-5 h-5 text-gray-400" />
            case 'mp3':
            case 'wav':
                return <Music className="w-5 h-5 text-purple-400" />
            case 'jpg':
            case 'jpeg':
            case 'png':
            case 'webp':
            case 'gif':
            case 'svg':
                return <Image className="w-5 h-5 text-cyan-400" />
            default:
                return <File className="w-5 h-5 text-gray-400" />
        }
    }

    const filteredSections = fileSections.map(section => ({
        ...section,
        files: section.files.filter(file =>
            file.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
            file.type.toLowerCase().includes(searchQuery.toLowerCase()) ||
            file.chat.toLowerCase().includes(searchQuery.toLowerCase()) ||
            file.user.toLowerCase().includes(searchQuery.toLowerCase())
        )
    }))

    const viewAllFiles = (category) => {
        const categoryMap = {
            'Documents': 'docs',
            'Audio Files': 'audio',
            'Images': 'images'
        }
        navigate(`/app/files/${categoryMap[category]}`)
    }

    return (
        <div className="p-6 space-y-6">
            {/* Page Header */}
            <motion.div
                initial={{ opacity: 0, y: -20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.3 }}
                className="flex items-center justify-between"
            >
                <div className="flex items-center gap-3">
                    <motion.div
                        whileHover={{ rotate: 180 }}
                        transition={{ duration: 0.3 }}
                    >
                        <Folder className="w-6 h-6 text-blue-400" />
                    </motion.div>
                    <div>
                        <h1 className="text-xl font-semibold text-gray-100">Chat Files</h1>
                        <p className="text-sm text-gray-400">Track files uploaded or generated in your conversations</p>
                    </div>
                </div>
            </motion.div>

            {/* Search Bar */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.3, delay: 0.1 }}
                className="relative"
            >
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
                <Input
                    placeholder="Search files by name, type, or chat..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="pl-10 bg-gray-800 border-gray-600 text-gray-100 focus:border-blue-500"
                />
            </motion.div>

            {/* File Sections */}
            <div className="space-y-8">
                {filteredSections.map((section, sectionIndex) => {
                    const SectionIcon = section.icon
                    return (
                        <motion.div
                            key={section.title}
                            initial={{ opacity: 0, y: 20 }}
                            animate={{ opacity: 1, y: 0 }}
                            transition={{ duration: 0.3, delay: 0.2 + sectionIndex * 0.1 }}
                            className="space-y-4"
                        >
                            {/* Section Header */}
                            <div className="flex items-center gap-3">
                                <div className="flex items-center gap-2">
                                    <motion.div
                                        whileHover={{ scale: 1.1 }}
                                        className="w-2 h-2 bg-blue-500 rounded-full"
                                    />
                                    <SectionIcon className="w-5 h-5 text-blue-400" />
                                    <h2 className="text-lg font-semibold text-gray-100">{section.title}</h2>
                                </div>
                                <div className="flex-1 h-px bg-gray-700"></div>
                                <div className="flex items-center gap-3">
                                    <span className="text-xs text-gray-500 bg-gray-800 px-2 py-1 rounded-full">
                                        {section.files.length} files
                                    </span>
                                    <Button
                                        variant="ghost"
                                        size="sm"
                                        onClick={() => viewAllFiles(section.title)}
                                        className="text-blue-400 hover:text-blue-300 hover:bg-blue-500/10 text-xs px-3 py-1 h-auto"
                                    >
                                        View All
                                        <ArrowRight className="w-3 h-3 ml-1" />
                                    </Button>
                                </div>
                            </div>

                            <p className="text-sm text-gray-400 ml-7">{section.description}</p>

                            {/* Files Grid */}
                            {section.files.length > 0 ? (
                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 ml-7">
                                    {section.files.map((file, fileIndex) => (
                                        <motion.div
                                            key={file.name}
                                            initial={{ opacity: 0, scale: 0.95 }}
                                            animate={{ opacity: 1, scale: 1 }}
                                            transition={{ duration: 0.2, delay: fileIndex * 0.05 }}
                                            className="bg-gray-800 border border-gray-600 rounded-lg p-4 hover:bg-gray-700 transition-all duration-200 group"
                                        >
                                            {/* File Header */}
                                            <div className="flex items-start justify-between mb-3">
                                                <div className="flex items-center gap-3">
                                                    {getFileIcon(file.name)}
                                                    <div className="flex-1 min-w-0">
                                                        <h3 className="text-sm font-medium text-gray-200 truncate">
                                                            {file.name}
                                                        </h3>
                                                        <p className="text-xs text-gray-500">{file.type}</p>
                                                        <p className="text-xs text-gray-400 mt-1">
                                                            <span className="font-medium">Chat:</span> {file.chat}
                                                        </p>
                                                    </div>
                                                </div>

                                                {/* Action Buttons */}
                                                <div className="opacity-0 group-hover:opacity-100 transition-opacity flex gap-1">
                                                    <Button variant="ghost" size="sm" className="h-6 w-6 p-0 text-gray-400 hover:text-blue-400">
                                                        <Eye className="w-3 h-3" />
                                                    </Button>
                                                    <Button variant="ghost" size="sm" className="h-6 w-6 p-0 text-gray-400 hover:text-green-400">
                                                        <Download className="w-3 h-3" />
                                                    </Button>
                                                    <Button variant="ghost" size="sm" className="h-6 w-6 p-0 text-gray-400 hover:text-red-400">
                                                        <Trash2 className="w-3 h-3" />
                                                    </Button>
                                                </div>
                                            </div>

                                            {/* File Details */}
                                            <div className="space-y-2 text-xs text-gray-500">
                                                <div className="flex justify-between">
                                                    <span>Size: {file.size}</span>
                                                    <span>{file.date}</span>
                                                </div>
                                                <div className="flex justify-between">
                                                    <span className={`px-2 py-1 rounded-full text-xs ${file.user.includes('AI') ? 'bg-blue-500/20 text-blue-400' : 'bg-green-500/20 text-green-400'
                                                        }`}>
                                                        {file.user}
                                                    </span>
                                                </div>
                                            </div>
                                        </motion.div>
                                    ))}
                                </div>
                            ) : (
                                <div className="ml-7 flex items-center justify-center py-8 text-gray-500">
                                    <div className="text-center">
                                        <SectionIcon className="w-12 h-12 mx-auto mb-2 opacity-50" />
                                        <p>No files found</p>
                                        {searchQuery && <p className="text-xs">Try adjusting your search</p>}
                                    </div>
                                </div>
                            )}
                        </motion.div>
                    )
                })}
            </div>

            {/* Summary Section */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.3, delay: 0.6 }}
                className="bg-gray-800/50 border border-gray-600 rounded-lg p-6"
            >
                <div className="flex items-center gap-3 mb-4">
                    <motion.div
                        whileHover={{ scale: 1.1 }}
                        className="w-2 h-2 bg-blue-500 rounded-full"
                    />
                    <h3 className="text-lg font-medium text-gray-200">File Summary</h3>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    {fileSections.map((section, index) => (
                        <div key={section.title} className="bg-gray-700/50 rounded-lg p-4">
                            <div className="flex items-center gap-2 mb-2">
                                <section.icon className="w-4 h-4 text-blue-400" />
                                <span className="text-sm font-medium text-gray-200">{section.title}</span>
                            </div>
                            <div className="text-2xl font-bold text-blue-400 mb-1">
                                {section.files.length}
                            </div>
                            <div className="text-xs text-gray-400">files tracked</div>
                        </div>
                    ))}
                </div>

                <div className="mt-4 pt-4 border-t border-gray-600">
                    <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-400">Total files tracked:</span>
                        <span className="font-semibold text-gray-200">
                            {fileSections.reduce((total, section) => total + section.files.length, 0)} files
                        </span>
                    </div>
                    <div className="flex items-center justify-between text-sm mt-1">
                        <span className="text-gray-400">Files from AI:</span>
                        <span className="font-semibold text-blue-400">
                            {fileSections.reduce((total, section) =>
                                total + section.files.filter(file => file.user.includes('AI')).length, 0
                            )} files
                        </span>
                    </div>
                    <div className="flex items-center justify-between text-sm mt-1">
                        <span className="text-gray-400">Files from users:</span>
                        <span className="font-semibold text-green-400">
                            {fileSections.reduce((total, section) =>
                                total + section.files.filter(file => file.user.includes('user')).length, 0
                            )} files
                        </span>
                    </div>
                </div>
            </motion.div>
        </div>
    )
}

export default Files